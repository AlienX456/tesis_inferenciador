version: 2.1

jobs:
  test-control-archivos:
    docker:
      - image: circleci/python:3.7.7
    steps:
      - checkout
      - run:
          working_directory: src/controlArchvios/
          command: pip install -r requirements.txt
          name: Install requirements
      - run:
          working_directory: src/controlArchvios/
          command: pytest test/
          name: Test
  build-inferencia-adapa:
    docker:
      - image: circleci/golang:1.13.13-buster
    steps:
      - checkout
      - setup_remote_docker
      - run:
          workdir: src/inferenciador_adapa/
          name: Contruyendo imagen y publicando 
          command: |
            TAG=0.1.$CIRCLE_BUILD_NUM
            docker build -t alienx456/inferencia-adapa:$TAG .
            echo $DOCKER_PASS | docker login -u $DOCKER_USER --password-stdin
            docker push alienx456/inferencia-adapa:$TAG
  test-inferencia-adapa:
    docker:
      - image: alienx456/inferencia-adapa:0.1.$CIRCLE_BUILD_NUM
    environment:
      DATA_PATH: /inferenciador/data/
      MODEL_NAME: model_system1
      MODEL_URL: https://github.com/sainathadapa/dcase2019-task5-urban-sound-tagging/releases/download/1.0/model_system1
      DEVICE_NAME: cpu
      AUDIO_PATH: /inferenciador/data/
      CHANNEL_MEANS_FILE: channel_means.npy
      CHANNEL_STDS_FILE: channel_stds.npy
      TEST_AUDIO_URL: http://download1641.mediafire.com/z2g1dernqxug/s56q443hq4r3gm4/test_audio.wav
      TEST_AUDIO_NAME: test_audio.wav
      INFERENCIA_URL: /api/inferencia
    steps:
      - run: 
          name: Realizando pruebas sobre el inferenciador
          workdir: /inferenciador/
          command: pytest




workflows:
  main:
    jobs:
      - build-inferencia-adapa
      - test-inferencia-adapa:
          requires:
            - build-inferencia-adapa
      - test-control-archivos
